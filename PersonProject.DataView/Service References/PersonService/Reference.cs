//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.35317
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PersonProject.DataView.PersonService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="person", Namespace="http://tempuri.org/myservice/v1.0/")]
    [System.SerializableAttribute()]
    public partial class person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://tempuri.org/myservice/v1.0/", ConfigurationName="PersonService.personService")]
    public interface personService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/myservice/v1.0/personService/getAll", ReplyAction="http://tempuri.org/myservice/v1.0/personService/getAllResponse")]
        PersonProject.DataView.PersonService.person[] getAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/myservice/v1.0/personService/getAll", ReplyAction="http://tempuri.org/myservice/v1.0/personService/getAllResponse")]
        System.Threading.Tasks.Task<PersonProject.DataView.PersonService.person[]> getAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/myservice/v1.0/personService/getById", ReplyAction="http://tempuri.org/myservice/v1.0/personService/getByIdResponse")]
        PersonProject.DataView.PersonService.person getById(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/myservice/v1.0/personService/getById", ReplyAction="http://tempuri.org/myservice/v1.0/personService/getByIdResponse")]
        System.Threading.Tasks.Task<PersonProject.DataView.PersonService.person> getByIdAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface personServiceChannel : PersonProject.DataView.PersonService.personService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class personServiceClient : System.ServiceModel.ClientBase<PersonProject.DataView.PersonService.personService>, PersonProject.DataView.PersonService.personService {
        
        public personServiceClient() {
        }
        
        public personServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public personServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public personServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public personServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PersonProject.DataView.PersonService.person[] getAll() {
            return base.Channel.getAll();
        }
        
        public System.Threading.Tasks.Task<PersonProject.DataView.PersonService.person[]> getAllAsync() {
            return base.Channel.getAllAsync();
        }
        
        public PersonProject.DataView.PersonService.person getById(long id) {
            return base.Channel.getById(id);
        }
        
        public System.Threading.Tasks.Task<PersonProject.DataView.PersonService.person> getByIdAsync(long id) {
            return base.Channel.getByIdAsync(id);
        }
    }
}
